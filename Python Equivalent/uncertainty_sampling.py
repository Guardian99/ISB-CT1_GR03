# -*- coding: utf-8 -*-
"""Uncertainty Sampling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12rHDxKKnLaTMaZ8GWxF_h0YmF_wM3Pvr
"""

import pandas as pd
import numpy as np
from math import log

pred_prob_df = pd.read_csv("https://drive.google.com/uc?export=download&id=18t2V2udg3cWvEwj5dbbiIm9wTaZIIxwZ")

pred_prob_df.head(10)

"""## Computing Prediction Entropy

- Calculating for the first sample
- Creating a utility and predicting for all samples
"""

- (0.552170 * log(0.552170, 2) + 0.429029 * log(0.429029	, 2) + 0.018800 * log(0.018800, 2) ) / log(3, 2)

def get_pred_entropy( preds ):
  entropy = -sum([pred * log(pred, 2) for pred in preds]) / log(len(preds), 2)
  return entropy

pred_prob_df['entropy'] = pred_prob_df.apply(lambda rec: get_pred_entropy(rec), axis = 1)

pred_prob_df

"""## Top *10* samples with high uncertainty

> Indented block


"""

pred_prob_df.sort_values("entropy", ascending=False)[0:10]

"""## Top *10* samples with low uncertainty"""

pred_prob_df.sort_values("entropy", ascending=True)[0:10]

